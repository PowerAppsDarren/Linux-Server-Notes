# =========================================================================================
# 🔒 Hardened SSH Server Configuration for Ubuntu 24.04 LTS 🖥️
#
# This file is located at:
#   /etc/ssh/sshd_config
#
# This configuration follows current security best practices as of 2024-2025
# and is designed to provide a secure SSH server setup.
# It is intended for Ubuntu 24.04 LTS and may not be compatible with older versions.
#
# Settings commented with # are system defaults and don't need to be changed
# unless you have specific requirements.
#
# Always test configuration with: 
#   sudo sshd -t
#
# Restart SSH with: 
#   sudo systemctl restart ssh.socket (Ubuntu 24.04 uses socket activation)

# ========================================================================================-
# 📚 TABLE OF CONTENTS 📋
# ========================================================================================
#
# 🚨 SECURITY RECOMMENDATIONS
#    • Essential security best practices
#    • Configuration testing and validation
#    • Monitoring and maintenance guidelines
#    • Additional security tools and measures
#
# 🌐 NETWORK AND PORT CONFIGURATION
#    • Port - SSH listening port
#    • AddressFamily - IP version (IPv4/IPv6)
#    • ListenAddress - Specific IP addresses to bind
#
# 🔐 CRYPTOGRAPHIC ALGORITHMS
#    • HostKeyAlgorithms - Server identity key types
#    • KexAlgorithms - Key exchange methods
#    • Ciphers - Symmetric encryption algorithms
#    • MACs - Message authentication codes
#    • PubkeyAcceptedAlgorithms - User key signature types
#    • RequiredRSASize - Minimum RSA key length
#
# 🗝️ HOST KEY CONFIGURATION
#    • HostKey - Server private key files
#
# 👤 AUTHENTICATION METHODS
#    • PubkeyAuthentication - Enable/disable SSH keys
#    • PasswordAuthentication - Enable/disable passwords
#    • PermitEmptyPasswords - Allow blank passwords
#    • KbdInteractiveAuthentication - Challenge-response auth
#    • UsePAM - Pluggable Authentication Modules
#    • AuthenticationMethods - Required auth sequence
#    • MaxAuthTries - Login attempt limit
#
# 👨‍💼 ROOT AND USER ACCESS CONTROL
#    • PermitRootLogin - Root user SSH access
#    • StrictModes - File permission enforcement
#    • AllowUsers - Permitted user whitelist
#    • DenyUsers - Denied user blacklist
#    • AllowGroups - Permitted group whitelist
#
# ⏱️ SESSION AND CONNECTION LIMITS
#    • LoginGraceTime - Authentication timeout
#    • MaxSessions - Concurrent sessions per connection
#    • MaxStartups - Simultaneous unauthenticated connections
#    • ClientAliveInterval - Keep-alive message frequency
#    • ClientAliveCountMax - Maximum missed keep-alives
#
# 📝 LOGGING CONFIGURATION
#    • SyslogFacility - Log destination facility
#    • LogLevel - Logging verbosity level
#
# ⚙️ PROTOCOL AND FEATURE SETTINGS
#    • Protocol - SSH protocol version
#    • PrintLastLog - Show last login time
#    • PrintMotd - Display message of the day
#    • X11Forwarding - GUI application forwarding
#    • AllowTcpForwarding - Port tunneling permission
#    • AllowAgentForwarding - SSH agent forwarding
#    • GatewayPorts - Remote port forwarding binding
#
# 🏷️ BANNER AND NOTIFICATION
#    • Banner - Pre-authentication warning message
#
# 📁 FILE TRANSFER SETTINGS
#    • Subsystem - SFTP server configuration
#    • Match blocks - User/group-specific settings
#       - ChrootDirectory, ForceCommand, etc.
#
# 📦 INCLUDE ADDITIONAL CONFIGURATION
#    • Include - Additional config file inclusion
#
# 🦹‍♂️ CUSTOMIZED USER CONFIGURATION
#    • Match User - User-specific settings override
#    • AllowUsers - Specific user permissions
#    • Custom authentication methods per user
#    • User-specific connection limits
#    • Per-user forwarding permissions

# =========================================================================================
# 🚨 SECURITY RECOMMENDATIONS ✅
# =========================================================================================
# 01. 🔄 Change default port (Port directive above)
# 02. 🛡️ Use fail2ban to block repeated failed attempts
# 03. 🔥 Configure firewall to limit SSH access by IP
# 04. 🔑 Regularly update SSH keys and rotate them
# 05. 📊 Monitor SSH logs for suspicious activity
# 06. 📱 Use 2FA with tools like Google Authenticator if needed
# 07. 📜 Consider using SSH certificates for large deployments
# 08. ✅ Test configuration with: sudo sshd -t
# 09. 🔄 Restart service with: sudo systemctl restart ssh
# 10. 🔍 Audit with tools like ssh-audit for compliance verification

# =========================================================================================
# 🌐 NETWORK AND PORT CONFIGURATION 🔌
# Controls which interfaces and ports SSH listens on
# =========================================================================================

# 🚪 Port to listen on - changing from default 22 reduces automated attacks
# Consider using a high port number (1024-65535) for better security
# Remember to update firewall rules when changing this!
# Possible values: 1-65535
# 
# Good choices (avoid obvious ones):
Port 1022      
    # Port 2048    # Power of 2
    # Port 3389    # Mimics RDP (confuses scanners)
    # Port 8022    # Common alternative

# Avoid these (commonly scanned):
    # Port 2222    # Too obvious
    # Port 2022    # Too obvious  
    # Port 443     # HTTPS port
    # Port 80      # HTTP port

# 🌍 IP version to use for connections
# Possible values:
#    - any (IPv4 and IPv6)
#    - inet (IPv4 only) 
#    - inet6 (IPv6 only)
# AddressFamily any

# 📍 Specific IP addresses to listen on - restrict to specific interfaces for security
# Comment out to listen on all interfaces (default behavior)
# Multiple ListenAddress lines can be used for multiple IPs
# Possible values: IP address or 0.0.0.0 for all IPv4, :: for all IPv6
# ListenAddress 0.0.0.0
# ListenAddress ::

# =========================================================================================
# 🔐 CRYPTOGRAPHIC ALGORITHMS - MODERN SECURE CIPHERS 🛡️
# Uses only strong, modern encryption algorithms resistant to attacks
# =========================================================================================

# 🆔 Host key algorithms - determines which host key types the server offers
# Prioritizes Ed25519 and ECDSA over RSA for better security and performance
# These are the cryptographic signatures that prove server identity
# Possible values: ssh-ed25519, ecdsa-sha2-nistp256, rsa-sha2-512, etc.
HostKeyAlgorithms ssh-ed25519,ssh-ed25519-cert-v01@openssh.com,sk-ssh-ed25519@openssh.com,sk-ssh-ed25519-cert-v01@openssh.com,rsa-sha2-512,rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256,rsa-sha2-256-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp256-cert-v01@openssh.com

# 🤝 Key exchange algorithms - how client and server establish shared encryption keys
# Uses modern, quantum-resistant algorithms and removes weak Diffie-Hellman groups
# Possible values: curve25519-sha256, diffie-hellman-group16-sha512, etc.
KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha256

# 🔒 Symmetric ciphers for encrypting the connection after key exchange
# Prioritizes ChaCha20-Poly1305 and AES-GCM for authenticated encryption
# Avoids CBC mode ciphers which are vulnerable to certain attacks
# Possible values: chacha20-poly1305@openssh.com, aes256-gcm@openssh.com, etc.
Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

# ✅ Message Authentication Codes - ensures data integrity and authenticity
# Uses only "encrypt-then-MAC" modes which are cryptographically stronger
# Possible values: umac-128-etm@openssh.com, hmac-sha2-256-etm@openssh.com, etc.
MACs umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com

# ✍️ Public key signature algorithms accepted for user authentication
# Matches HostKeyAlgorithms for consistency
# Possible values: ssh-ed25519, rsa-sha2-512, ecdsa-sha2-nistp256, etc.
PubkeyAcceptedAlgorithms ssh-ed25519,ssh-ed25519-cert-v01@openssh.com,sk-ssh-ed25519@openssh.com,sk-ssh-ed25519-cert-v01@openssh.com,rsa-sha2-512,rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256,rsa-sha2-256-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp256-cert-v01@openssh.com

# 📏 Minimum RSA key size - enforces strong key lengths
# 3072-bit provides 128-bit security equivalent, future-proofing against advances
# Possible values: 1024, 2048, 3072, 4096
RequiredRSASize 3072

# =========================================================================================
# 🗝️ HOST KEY CONFIGURATION 🏠
# Specifies which host key files the server should use
# =========================================================================================

# 🔑 Host private key files - server's identity certificates
# Ed25519 is preferred for better security and performance
# Multiple key types allow compatibility with different clients
# Possible values: path to private key file
HostKey /etc/ssh/ssh_host_ed25519_key
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key

# =========================================================================================
# 👤 AUTHENTICATION METHODS 🔐
# Controls how users can authenticate to the server
# =========================================================================================

# 🔑 Allow public key authentication - most secure method
# Uses cryptographic key pairs instead of passwords
# Possible values:
#    - yes (allow public key auth)
#    - no (disable public key auth)
PubkeyAuthentication yes

# 🚫 Disable password authentication - forces use of SSH keys
# Prevents brute force password attacks
# Possible values:
#    - yes (allow password auth)
#    - no (disable password auth)
PasswordAuthentication no

# 🔒 Disable empty passwords - prevents accounts with no password from logging in
# Essential security measure
# Possible values:
#    - yes (allow empty passwords)
#    - no (require password if using password auth)
PermitEmptyPasswords no

# ❌ Disable challenge-response authentication
# Reduces attack surface by limiting authentication methods
# Possible values:
#    - yes (allow challenge-response)
#    - no (disable challenge-response)
KbdInteractiveAuthentication no

# 🔌 Use PAM (Pluggable Authentication Modules) for additional auth checks
# Allows integration with system password policies and logging
# Possible values:
#    - yes (use PAM)
#    - no (skip PAM)
# UsePAM yes

# 🚫 Disable user environment variable setting - critical security setting
# Prevents users from overriding system environment variables like PATH
# Possible values:
#    - yes (allow user environment files)
#    - no (disable user environment files)
PermitUserEnvironment no

# 🎯 Authentication methods required for login
# This forces public key as first factor - can add additional factors
# Possible values: publickey, password, keyboard-interactive, etc.
AuthenticationMethods publickey

# 🔢 Maximum authentication attempts before disconnecting
# Prevents brute force attacks by limiting retry attempts
# Possible values: 1-6 (reasonable range)
MaxAuthTries 1

# =========================================================================================
# 👨‍💼 ROOT AND USER ACCESS CONTROL 🚫
# Controls which users can access the system
# =========================================================================================

# 🚫 Prohibit direct root login via SSH
# Forces use of sudo for administrative tasks, improving audit trail
# Possible values:
#    - yes (allow root login)
#    - no (prohibit root login) 
#    - prohibit-password (allow root with keys only)
#    - forced-commands-only (root can only run specific commands)
PermitRootLogin no

# 🔐 Require strict file permissions on user files
# Ensures ~/.ssh directory and key files have proper permissions
# Possible values:
#    - yes (enforce strict permissions)
#    - no (allow loose permissions)
# StrictModes yes

# ✅ Allow specific users only (uncomment and modify as needed)
# Restricts SSH access to a defined list of users
# Possible values: space-separated list of usernames
# Replace "darren" with your username
AllowUsers darren

# ❌ Deny specific users (alternative to AllowUsers)
# Possible values: space-separated list of usernames
# DenyUsers baduser guest

# 👥 Allow specific groups only
# Possible values: space-separated list of group names
# AllowGroups ssh-users admin

# =========================================================================================
# ⏱️ SESSION AND CONNECTION LIMITS 🔗
# Controls connection timeouts and limits
# =========================================================================================

# ⏰ Time to wait for authentication before disconnecting
# Shorter time reduces exposure to attacks
# Possible values: time in seconds or with suffix (30s, 2m, etc.)
LoginGraceTime 10

# 📊 Maximum concurrent SSH sessions per network connection
# Prevents resource exhaustion attacks
# Possible values: number of sessions (1-100 reasonable range)
MaxSessions 5

# 🚦 Maximum number of simultaneous unauthenticated connections
# Format: start:rate:full (start accepting, rate limit, max connections)
# Possible values: number:number:number
MaxStartups 2:30:10

# 💓 Send keep-alive messages to detect broken connections
# Helps clean up orphaned connections
# Possible values: time in seconds (0 disables, 300-600 recommended)
ClientAliveInterval 600

# 📈 Maximum missed keep-alive messages before disconnecting
# Combined with ClientAliveInterval determines total timeout
# Possible values: number of missed messages (1-3 recommended)
ClientAliveCountMax 3

# =========================================================================================
# 📝 LOGGING CONFIGURATION 📊
# Controls what gets logged and where
# =========================================================================================

# 📋 Logging facility for SSH events
# Important for security monitoring and incident response
# Possible values:
#    - DAEMON, USER, AUTH, LOCAL0-7
SyslogFacility AUTH

# 🔍 Logging level detail
# Higher levels provide more detail for security monitoring
# Possible values:
#    - QUIET, FATAL, ERROR, INFO, VERBOSE, DEBUG, DEBUG1, DEBUG2, DEBUG3
LogLevel INFO

# =========================================================================================
# ⚙️ PROTOCOL AND FEATURE SETTINGS 🔧
# Controls various SSH protocol features
# =========================================================================================

# 🔢 SSH protocol version - only version 2 is secure
# Version 1 has known cryptographic weaknesses
# Possible values:
#    - 2 (secure, modern protocol)
# Protocol 2

# 🕐 Print last login time when user connects
# Useful for detecting unauthorized access
# Possible values:
#    - yes (show last login)
#    - no (don't show last login)
# PrintLastLog yes

# 📢 Print message of the day from /etc/motd
# Can provide useful system information to users
# Possible values:
#    - yes (show MOTD)
#    - no (skip MOTD)
PrintMotd yes

# 🖥️ Disable X11 (GUI) forwarding for security
# Prevents GUI applications from running over SSH
# Possible values:
#    - yes (allow X11 forwarding)
#    - no (disable X11 forwarding)
X11Forwarding yes

# 🚫 Disable TCP port forwarding
# Prevents SSH tunneling which could bypass firewall rules
# Possible values:
#    - yes (allow TCP forwarding)
#    - no (disable TCP forwarding)
#    - local (allow local forwarding only)
#    - remote (allow remote forwarding only)
AllowTcpForwarding no

# 🔄 Disable agent forwarding for security
# Prevents SSH key agent from being forwarded to remote host
# Possible values:
#    - yes (allow agent forwarding)
#    - no (disable agent forwarding)
AllowAgentForwarding no

# 🚪 Disable gateway ports (remote port forwarding binding)
# Prevents remote hosts from connecting to forwarded ports
# Possible values:
#    - yes (allow gateway ports)
#    - no (disable gateway ports)
#    - clientspecified (client controls binding)
# GatewayPorts no

# =========================================================================================
# 🏷️ BANNER AND NOTIFICATION ⚠️
# Pre-authentication warning messages
# =========================================================================================

# 📄 Display warning banner before authentication
# Legal notice and usage policy - customize as needed
# Possible values: path to banner file or none
# Banner /etc/ssh/banner.txt

# =========================================================================================
# 📁 FILE TRANSFER SETTINGS 📤
# Controls SFTP and file transfer capabilities
# =========================================================================================

# 📂 SFTP subsystem configuration
# Comment out to disable SFTP entirely if not needed
# Possible values: subsystem_name path_to_subsystem_binary
Subsystem sftp /usr/lib/openssh/sftp-server

# 🏠 Chroot SFTP users to their home directory (optional)
# Uncomment and configure for restricted SFTP access
# Match Group sftponly
#    ChrootDirectory %h
#    ForceCommand internal-sftp
#    AllowTcpForwarding no
#    X11Forwarding no

# =========================================================================================
# 📦 INCLUDE ADDITIONAL CONFIGURATION 🔗
# Allows modular configuration management
# =========================================================================================

# 📋 Include additional configuration files
# Allows splitting configuration across multiple files
# Files are processed in alphabetical order
# Possible values: path glob pattern
Include /etc/ssh/sshd_config.d/*.conf

# =========================================================================================
# 🦹‍♂️ CUSTOMIZED USER CONFIGURATION 🔒
# Replace "darren" with your username
# This section applies specific settings for the user "darren"
# =========================================================================================
Match User darren
    # Authentication options
    PasswordAuthentication yes
    PubkeyAuthentication yes
    AuthenticationMethods publickey,password
    MaxAuthTries 3
    
    # Connection limits
    MaxSessions 10
    ClientAliveInterval 0
    
    # Forwarding permissions
    AllowTcpForwarding yes
    AllowAgentForwarding yes
    X11Forwarding yes
    
    # SFTP restrictions
    ForceCommand internal-sftp
    ChrootDirectory /
    
    # Logging
    LogLevel VERBOSE
    
    # Network restrictions
    # (Can't use ListenAddress or Port in Match blocks)
    
    # Environment
    AcceptEnv LANG LC_* EDITOR    # Only accept safe variables
    
    # Banner
    Banner /etc/ssh/darren-banner.txt
