version: "3.9"

x-env: &plane-env
  env_file:
    - ./plane.env        # ship this file alongside docker-compose.yml

services:

  #--------------------------#
  # Databases & Queues
  #--------------------------#

  plane-db:
    image: postgres:15
    container_name: plane-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-plane}
      POSTGRES_USER: ${POSTGRES_USER:-plane}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-plane}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [ plane-net ]

  plane-redis:
    image: redis:7-alpine
    container_name: plane-redis
    restart: unless-stopped
    command: ["redis-server", "--save", "60", "1"]
    volumes:
      - redisdata:/data
    networks: [ plane-net ]

  rabbitmq:
    image: rabbitmq:3-management
    container_name: plane-rabbit
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER:-plane}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD:-plane}
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    networks: [ plane-net ]

  plane-minio:
    image: minio/minio:RELEASE.2024-05-01T09-48-40Z
    container_name: plane-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio123}
    volumes:
      - miniodata:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks: [ plane-net ]

  #--------------------------#
  # Plane core micro-services
  #--------------------------#

  api:
    image: makeplane/plane-backend:${APP_RELEASE:-stable}
    container_name: plane-api
    <<: *plane-env
    depends_on: [plane-db, plane-redis, rabbitmq, plane-minio]
    networks: [ plane-net ]

  web:
    image: makeplane/plane-frontend:${APP_RELEASE:-stable}
    container_name: plane-web
    <<: *plane-env
    depends_on: [api]
    networks: [ plane-net ]

  admin:
    image: makeplane/plane-admin:${APP_RELEASE:-stable}
    container_name: plane-admin
    <<: *plane-env
    depends_on: [api]
    networks: [ plane-net ]

  space:
    image: makeplane/plane-space:${APP_RELEASE:-stable}
    container_name: plane-space
    <<: *plane-env
    depends_on: [api]
    networks: [ plane-net ]

  live:
    image: makeplane/plane-live:${APP_RELEASE:-stable}
    container_name: plane-live
    <<: *plane-env
    depends_on: [api]
    networks: [ plane-net ]

  worker:
    image: makeplane/plane-worker:${APP_RELEASE:-stable}
    container_name: plane-worker
    <<: *plane-env
    depends_on: [api, rabbitmq]
    networks: [ plane-net ]

  beat-worker:
    image: makeplane/plane-worker:${APP_RELEASE:-stable}
    container_name: plane-beat
    command: ["celery", "-A", "plane", "beat", "-l", "info"]
    <<: *plane-env
    depends_on: [api, rabbitmq]
    networks: [ plane-net ]

  migrator:
    image: makeplane/plane-backend:${APP_RELEASE:-stable}
    container_name: plane-migrator
    <<: *plane-env
    command: ["python", "manage.py", "migrate", "--noinput"]
    depends_on: [plane-db]
    networks: [ plane-net ]
    restart: "no"

  proxy:
    image: nginx:1.25-alpine
    container_name: plane-proxy
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro   # supply a ready config
    depends_on: [web, live]
    networks: [ plane-net ]

networks:
  plane-net:
    driver: bridge

volumes:
  pgdata:
  redisdata:
  rabbitmqdata:
  miniodata:
